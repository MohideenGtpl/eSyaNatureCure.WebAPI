using eSyaNatureCure.DL.Entities;
using eSyaNatureCure.DO;
using Microsoft.EntityFrameworkCore;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace eSyaNatureCure.DL.Repository
{
    public class GuestCheckInRepository
    {
        public async System.Threading.Tasks.Task<DO_ReturnParameter> CreateGuestCheckinAsync(int businessKey, decimal bookingKey, int guestId, int userID, string terminalID)
        {
            using (var db = new eSyaEnterprise())
            {
                using (var dbContext = db.Database.BeginTransaction())
                {
                    try
                    {
                        //var exists = db.GtEfoppr.Where(w => w.MobileNumber == obj.PatientMobileNumber).Count();
                        //if (exists > 0)
                        //{
                        //    return new DO_ReturnParameter() { Status = false, Message = "Mobile Number Already Exists" };
                        //}

                        var gd = await db.GtGptbkg.Where(w => w.BusinessKey == businessKey && w.BookingKey == bookingKey && w.GuestId == guestId).FirstOrDefaultAsync();

                        GtEfoppr pp;
                        var dc_pm = await db.GtEcdcsn
                         .Where(w => w.BusinessKey == businessKey
                             && w.DocumentId == 1).FirstOrDefaultAsync();
                        dc_pm.CurrentDocNumber = dc_pm.CurrentDocNumber + 1;
                        var patient_id = System.DateTime.Now.ToString("yMM") + (dc_pm.CurrentDocNumber).ToString().PadLeft(4, '0');

                        DateTime dob = System.DateTime.Now.AddYears(-gd.AgeYy);
                        pp = new GtEfoppr
                        {
                            RUhid = dc_pm.CurrentDocNumber,
                            SUhid = dc_pm.CurrentDocNumber,
                            RegistrationDate = System.DateTime.Now,
                            BusinessKey = businessKey,
                            FirstName = gd.FirstName,
                            LastName = gd.LastName,
                            Gender = gd.Gender,
                            IsDobapplicable = false,
                            DateOfBirth = dob,
                            AgeYy = gd.AgeYy,
                            AgeMm = 0,
                            AgeDd = 0,
                            Isdcode = 0,
                            MobileNumber = gd.MobileNumber,
                            EMailId = gd.EmailId,
                            PatientStatus = "Y",
                            RecordStatus = 0,
                            BillStatus = "O",
                            PatientId = patient_id,
                            ActiveStatus = true,
                            CreatedBy = userID,
                            CreatedOn = System.DateTime.Now,
                            CreatedTerminal = terminalID
                        };

                        db.GtEfoppr.Add(pp);

                        await db.SaveChangesAsync();
                        dbContext.Commit();

                        return new DO_ReturnParameter();
                    }
                    catch (Exception ex)
                    {
                        throw ex;
                    }
                }
            }
        }
    }
}
