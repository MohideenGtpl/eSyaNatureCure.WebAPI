using eSyaNatureCure.DL.Entities;
using eSyaNatureCure.DO;
using eSyaNatureCure.IF;
using Microsoft.EntityFrameworkCore;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;


namespace eSyaNatureCure.DL.Repository
{
   public class PackageDiscountRepository: IPackageDiscountRepository
    {
        #region Package discount

        public async Task<List<DO_PackageDiscount>> GetAllPackageDiscountbyPackageId(int packageId)
        {
            using (var db = new eSyaEnterprise())
            {
                try
                {
                    if (packageId == 0)
                    {
                        var result = db.GtGppkdc.Join(db.GtGppkms, lkey => new { lkey.PackageId },
                            ent => new { ent.PackageId },
                            (lkey, ent) => new { lkey, ent }).Join(db.GtGprmty,
                            Bloc => new { Bloc.lkey.RoomTypeId },
                            seg => new { seg.RoomTypeId },
                            (Bloc, seg) => new { Bloc, seg })
                            .Select(c => new DO_PackageDiscount
                            {
                                PackageId = c.Bloc.lkey.PackageId,
                                RoomTypeId = c.Bloc.lkey.RoomTypeId,
                                OccupancyType = c.Bloc.lkey.OccupancyType,
                                EffectiveDate = c.Bloc.lkey.EffectiveDate,
                                DiscountAmount = c.Bloc.lkey.DiscountAmount,
                                TillDate = c.Bloc.lkey.TillDate,
                                ActiveStatus = c.Bloc.lkey.ActiveStatus,
                                RoomTypeDesc = c.seg.RoomTypeDesc,
                                PackageDesc = c.Bloc.ent.PackageDesc

                            }).ToListAsync();
                        return await result;
                    }

                    else
                    {

                        var result = db.GtGppkdc.Where(x => x.PackageId == packageId).Join(db.GtGppkms, lkey => new { lkey.PackageId },
                            ent => new { ent.PackageId },
                            (lkey, ent) => new { lkey, ent }).Join(db.GtGprmty,
                            Bloc => new { Bloc.lkey.RoomTypeId },
                            seg => new { seg.RoomTypeId },
                            (Bloc, seg) => new { Bloc, seg })
                            .Select(c => new DO_PackageDiscount
                            {
                                PackageId = c.Bloc.lkey.PackageId,
                                RoomTypeId = c.Bloc.lkey.RoomTypeId,
                                OccupancyType = c.Bloc.lkey.OccupancyType,
                                EffectiveDate = c.Bloc.lkey.EffectiveDate,
                                DiscountAmount = c.Bloc.lkey.DiscountAmount,
                                TillDate = c.Bloc.lkey.TillDate,
                                ActiveStatus = c.Bloc.lkey.ActiveStatus,
                                RoomTypeDesc = c.seg.RoomTypeDesc,
                                PackageDesc = c.Bloc.ent.PackageDesc
                            }).ToListAsync();
                        return await result;
                    }

                }
                catch (Exception ex)
                {
                    throw ex;
                }
            }
        }

        public async Task<DO_ReturnParameter> InsertPackageDiscount(DO_PackageDiscount obj)
        {
            using (eSyaEnterprise db = new eSyaEnterprise())
            {
                using (var dbContext = db.Database.BeginTransaction())
                {
                    try
                    {

                        GtGppkdc is_pkdisExists = db.GtGppkdc.FirstOrDefault(b => b.RoomTypeId == obj.RoomTypeId && b.OccupancyType.ToUpper().Replace(" ", "") == obj.OccupancyType.ToUpper().Replace(" ", "")
                        && b.PackageId == obj.PackageId && b.EffectiveDate==obj.EffectiveDate);
                        if (is_pkdisExists == null)
                        {

                            var p_dis = new GtGppkdc
                            {
                                RoomTypeId = obj.RoomTypeId,
                                PackageId = obj.PackageId,
                                OccupancyType = obj.OccupancyType,
                                EffectiveDate = obj.EffectiveDate,
                                TillDate=obj.TillDate,
                                DiscountAmount = obj.DiscountAmount,
                                ActiveStatus = obj.ActiveStatus,
                                FormId = obj.FormId,
                                CreatedBy = obj.UserID,
                                CreatedOn = DateTime.Now,
                                CreatedTerminal = obj.TerminalID
                            };

                            db.GtGppkdc.Add(p_dis);
                            await db.SaveChangesAsync();
                            dbContext.Commit();
                            return new DO_ReturnParameter() { Status = true, Message = "Package discount Created Successfully" };

                        }
                        else
                        {
                            return new DO_ReturnParameter() { Status = false, Message = "Package discount already Exists try another one." };
                        }
                    }
                    catch (DbUpdateException ex)
                    {
                        dbContext.Rollback();
                        throw new Exception(CommonMethod.GetValidationMessageFromException(ex));
                    }
                    catch (Exception ex)
                    {
                        dbContext.Rollback();
                        throw ex;
                    }
                }
            }
        }

        public async Task<DO_ReturnParameter> UpdatePackageDiscount(DO_PackageDiscount obj)
        {
            using (eSyaEnterprise db = new eSyaEnterprise())
            {
                using (var dbContext = db.Database.BeginTransaction())
                {

                    try
                    {
                        GtGppkdc pkgdis = db.GtGppkdc.FirstOrDefault(b => b.RoomTypeId == obj.RoomTypeId && b.OccupancyType.ToUpper().Replace(" ", "") == obj.OccupancyType.ToUpper().Replace(" ", "")
                        && b.PackageId == obj.PackageId && b.EffectiveDate==obj.EffectiveDate);

                        if (pkgdis != null)
                        {

                            pkgdis.RoomTypeId = obj.RoomTypeId;
                            pkgdis.PackageId = obj.PackageId;
                            pkgdis.DiscountAmount = obj.DiscountAmount;
                            pkgdis.TillDate = obj.TillDate;
                            pkgdis.ActiveStatus = obj.ActiveStatus;
                            pkgdis.ModifiedBy = obj.UserID;
                            pkgdis.ModifiedOn = DateTime.Now;
                            pkgdis.ModifiedTerminal = obj.TerminalID;
                            await db.SaveChangesAsync();
                            dbContext.Commit();
                            return new DO_ReturnParameter() { Status = true, Message = "Package discount Updated sucessfully." };


                        }
                        else
                        {
                            return new DO_ReturnParameter() { Status = false, Message = "Couldn't find Package discount" };
                        }

                    }
                    catch (DbUpdateException ex)
                    {
                        dbContext.Rollback();
                        throw new Exception(CommonMethod.GetValidationMessageFromException(ex));
                    }
                    catch (Exception ex)
                    {
                        dbContext.Rollback();
                        throw ex;
                    }
                }
            }
        }

        public async Task<DO_ReturnParameter> ActiveOrDeActivePackageDiscount(DO_PackageDiscount obj)
        {
            using (var db = new eSyaEnterprise())
            {
                using (var dbContext = db.Database.BeginTransaction())
                {
                    try
                    {
                        GtGppkdc pkgdis = db.GtGppkdc.FirstOrDefault(b => b.RoomTypeId == obj.RoomTypeId && b.OccupancyType.ToUpper().Replace(" ", "") == obj.OccupancyType.ToUpper().Replace(" ", "")
                                             && b.PackageId == obj.PackageId && b.EffectiveDate==obj.EffectiveDate);
                        if (pkgdis == null)
                        {
                            return new DO_ReturnParameter() { Status = false, Message = "Package discount  is not exist" };
                        }

                        pkgdis.ActiveStatus = obj.Status;
                        await db.SaveChangesAsync();
                        dbContext.Commit();

                        if (obj.Status == true)
                            return new DO_ReturnParameter() { Status = true, Message = "Package discount  Activated Successfully." };
                        else
                            return new DO_ReturnParameter() { Status = true, Message = "Package discount  De Activated Successfully." };
                    }
                    catch (DbUpdateException ex)
                    {
                        dbContext.Rollback();
                        throw new Exception(CommonMethod.GetValidationMessageFromException(ex));

                    }
                    catch (Exception ex)
                    {
                        dbContext.Rollback();
                        throw ex;
                    }
                }
            }
        }

        #endregion Package 
    }
}
