using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace eSyaNatureCure.DL.Entities
{
    public partial class eSyaEnterprise : DbContext
    {
        public static string _connString = "";
        public eSyaEnterprise()
        {
        }

        public eSyaEnterprise(DbContextOptions<eSyaEnterprise> options)
            : base(options)
        {
        }

        public virtual DbSet<GtEcapcd> GtEcapcd { get; set; }
        public virtual DbSet<GtEcapct> GtEcapct { get; set; }
        public virtual DbSet<GtEcdcbn> GtEcdcbn { get; set; }
        public virtual DbSet<GtEcdcsn> GtEcdcsn { get; set; }
        public virtual DbSet<GtEfoppr> GtEfoppr { get; set; }
        public virtual DbSet<GtEfprdt> GtEfprdt { get; set; }
        public virtual DbSet<GtEfprpm> GtEfprpm { get; set; }
        public virtual DbSet<GtGpacms> GtGpacms { get; set; }
        public virtual DbSet<GtGppkcv> GtGppkcv { get; set; }
        public virtual DbSet<GtGppkms> GtGppkms { get; set; }
        public virtual DbSet<GtGppkpr> GtGppkpr { get; set; }
        public virtual DbSet<GtGprmbm> GtGprmbm { get; set; }
        public virtual DbSet<GtGprmop> GtGprmop { get; set; }
        public virtual DbSet<GtGprmty> GtGprmty { get; set; }
        public virtual DbSet<GtGptbkd> GtGptbkd { get; set; }
        public virtual DbSet<GtGptbkg> GtGptbkg { get; set; }
        public virtual DbSet<GtGptbkh> GtGptbkh { get; set; }
        public virtual DbSet<GtGptbkp> GtGptbkp { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. See http://go.microsoft.com/fwlink/?LinkId=723263 for guidance on storing connection strings.
                optionsBuilder.UseSqlServer(_connString);
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("ProductVersion", "2.2.6-servicing-10079");

            modelBuilder.Entity<GtEcapcd>(entity =>
            {
                entity.HasKey(e => e.ApplicationCode)
                    .HasName("PK_GT_ECAPCD_1");

                entity.ToTable("GT_ECAPCD");

                entity.Property(e => e.ApplicationCode).ValueGeneratedNever();

                entity.Property(e => e.CodeDesc)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.CreatedOn).HasColumnType("datetime");

                entity.Property(e => e.CreatedTerminal)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.FormId)
                    .IsRequired()
                    .HasColumnName("FormID")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.ModifiedOn).HasColumnType("datetime");

                entity.Property(e => e.ModifiedTerminal).HasMaxLength(50);

                entity.Property(e => e.ShortCode).HasMaxLength(15);

                entity.HasOne(d => d.CodeTypeNavigation)
                    .WithMany(p => p.GtEcapcd)
                    .HasForeignKey(d => d.CodeType)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_GT_ECAPCD_GT_ECAPCT");
            });

            modelBuilder.Entity<GtEcapct>(entity =>
            {
                entity.HasKey(e => e.CodeType);

                entity.ToTable("GT_ECAPCT");

                entity.Property(e => e.CodeType).ValueGeneratedNever();

                entity.Property(e => e.CodeTyepDesc)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.CodeTypeControl)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedOn).HasColumnType("datetime");

                entity.Property(e => e.CreatedTerminal)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.FormId)
                    .IsRequired()
                    .HasColumnName("FormID")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.ModifiedOn).HasColumnType("datetime");

                entity.Property(e => e.ModifiedTerminal).HasMaxLength(50);
            });

            modelBuilder.Entity<GtEcdcbn>(entity =>
            {
                entity.HasKey(e => new { e.BusinessKey, e.FinancialYear, e.DocumentId });

                entity.ToTable("GT_ECDCBN");

                entity.Property(e => e.DocumentId).HasColumnName("DocumentID");

                entity.Property(e => e.CreatedOn).HasColumnType("datetime");

                entity.Property(e => e.CreatedTerminal)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.ModifiedOn).HasColumnType("datetime");

                entity.Property(e => e.ModifiedTerminal).HasMaxLength(50);
            });

            modelBuilder.Entity<GtEcdcsn>(entity =>
            {
                entity.HasKey(e => new { e.BusinessKey, e.DocumentId });

                entity.ToTable("GT_ECDCSN");

                entity.Property(e => e.DocumentId).HasColumnName("DocumentID");

                entity.Property(e => e.CreatedOn).HasColumnType("datetime");

                entity.Property(e => e.CreatedTerminal)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.ModifiedOn).HasColumnType("datetime");

                entity.Property(e => e.ModifiedTerminal).HasMaxLength(50);
            });

            modelBuilder.Entity<GtEfoppr>(entity =>
            {
                entity.HasKey(e => e.RUhid);

                entity.ToTable("GT_EFOPPR");

                entity.Property(e => e.RUhid)
                    .HasColumnName("R_UHID")
                    .ValueGeneratedNever();

                entity.Property(e => e.AgeDd).HasColumnName("AgeDD");

                entity.Property(e => e.AgeMm).HasColumnName("AgeMM");

                entity.Property(e => e.AgeYy).HasColumnName("AgeYY");

                entity.Property(e => e.BillStatus)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.BloodGroup).HasMaxLength(6);

                entity.Property(e => e.CreatedOn).HasColumnType("datetime");

                entity.Property(e => e.CreatedTerminal)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.DateOfBirth).HasColumnType("datetime");

                entity.Property(e => e.EMailId)
                    .HasColumnName("eMailID")
                    .HasMaxLength(50);

                entity.Property(e => e.FirstName)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Gender)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.IsDobapplicable).HasColumnName("IsDOBApplicable");

                entity.Property(e => e.Isdcode).HasColumnName("ISDCode");

                entity.Property(e => e.LastName)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.MiddleName).HasMaxLength(50);

                entity.Property(e => e.MobileNumber)
                    .IsRequired()
                    .HasMaxLength(15);

                entity.Property(e => e.ModifiedOn).HasColumnType("datetime");

                entity.Property(e => e.ModifiedTerminal).HasMaxLength(50);

                entity.Property(e => e.PatientId)
                    .HasColumnName("PatientID")
                    .HasMaxLength(15);

                entity.Property(e => e.PatientLastVisitDate).HasColumnType("datetime");

                entity.Property(e => e.PatientStatus)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.RegistrationChargesValidTill).HasColumnType("datetime");

                entity.Property(e => e.RegistrationDate).HasColumnType("datetime");

                entity.Property(e => e.SUhid).HasColumnName("S_UHID");

                entity.Property(e => e.Title).HasMaxLength(4);
            });

            modelBuilder.Entity<GtEfprdt>(entity =>
            {
                entity.HasKey(e => new { e.BusinessKey, e.FinancialYear, e.BookTypeId, e.VoucherNumber });

                entity.ToTable("GT_EFPRDT");

                entity.Property(e => e.BookTypeId).HasColumnName("BookTypeID");

                entity.Property(e => e.AdvanceAdjAmount).HasColumnType("decimal(18, 6)");

                entity.Property(e => e.BillDocumentKey).HasColumnType("numeric(25, 0)");

                entity.Property(e => e.CancelledAmount).HasColumnType("decimal(18, 6)");

                entity.Property(e => e.CollectedAmount).HasColumnType("decimal(18, 6)");

                entity.Property(e => e.ConcessionAmount).HasColumnType("decimal(18, 6)");

                entity.Property(e => e.CreatedOn).HasColumnType("datetime");

                entity.Property(e => e.CreatedTerminal)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.DiscountAmount).HasColumnType("decimal(18, 6)");

                entity.Property(e => e.FormId)
                    .HasColumnName("FormID")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.ModifiedOn).HasColumnType("datetime");

                entity.Property(e => e.ModifiedTerminal).HasMaxLength(50);

                entity.Property(e => e.Narration).HasMaxLength(250);

                entity.Property(e => e.PaidorCollectedBy).HasMaxLength(100);

                entity.Property(e => e.RefVoucherDate).HasColumnType("datetime");

                entity.Property(e => e.RefVoucherKey).HasColumnType("numeric(25, 0)");

                entity.Property(e => e.RefundAmount).HasColumnType("decimal(18, 6)");

                entity.Property(e => e.RefundReason).HasMaxLength(250);

                entity.Property(e => e.TotalNetAmount).HasColumnType("decimal(18, 6)");

                entity.Property(e => e.VoucherAmount).HasColumnType("decimal(18, 6)");

                entity.Property(e => e.VoucherDate).HasColumnType("datetime");

                entity.Property(e => e.VoucherKey).HasColumnType("numeric(25, 0)");

                entity.Property(e => e.VoucherType)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<GtEfprpm>(entity =>
            {
                entity.HasKey(e => new { e.BusinessKey, e.VoucherKey });

                entity.ToTable("GT_EFPRPM");

                entity.Property(e => e.VoucherKey).HasColumnType("numeric(25, 0)");

                entity.Property(e => e.ApprovalNumber)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.Badate)
                    .HasColumnName("BADate")
                    .HasColumnType("datetime");

                entity.Property(e => e.BankTransferDate).HasColumnType("datetime");

                entity.Property(e => e.BankTransferNumber)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BareferenceNumber)
                    .HasColumnName("BAReferenceNumber")
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.BatchNumber)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.BranchName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CardExpiryDate)
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.CardHolderName)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.CardNumber)
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.CardTerminal)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.CardType)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.ChequeAmount).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.ChequeDate).HasColumnType("datetime");

                entity.Property(e => e.ChequeNumber)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedOn).HasColumnType("datetime");

                entity.Property(e => e.CreatedTerminal)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.DepositedAtBranch)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.DepostedAtCity)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.DepostedOn).HasColumnType("datetime");

                entity.Property(e => e.DraweeBank)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ModifiedOn).HasColumnType("datetime");

                entity.Property(e => e.ModifiedTerminal).HasMaxLength(50);

                entity.Property(e => e.MpreferenceDate)
                    .HasColumnName("MPReferenceDate")
                    .HasColumnType("datetime");

                entity.Property(e => e.MpreferenceNumber)
                    .HasColumnName("MPReferenceNumber")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ReferenceNumber)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.Remarks)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.ServiceCharge).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.TransferAmount).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.TransferFromBank)
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.TransferToBank)
                    .HasMaxLength(150)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<GtGpacms>(entity =>
            {
                entity.HasKey(e => e.ActivityId);

                entity.ToTable("GT_GPACMS");

                entity.Property(e => e.ActivityId).ValueGeneratedNever();

                entity.Property(e => e.ActivityDesc)
                    .IsRequired()
                    .HasMaxLength(150);

                entity.Property(e => e.CreatedOn).HasColumnType("datetime");

                entity.Property(e => e.CreatedTerminal)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.FormId)
                    .IsRequired()
                    .HasColumnName("FormID")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.ModifiedOn).HasColumnType("datetime");

                entity.Property(e => e.ModifiedTerminal).HasMaxLength(50);

                entity.Property(e => e.ScheduleType)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<GtGppkcv>(entity =>
            {
                entity.HasKey(e => new { e.PackageId, e.DayId, e.ActivityId });

                entity.ToTable("GT_GPPKCV");

                entity.Property(e => e.CreatedOn).HasColumnType("datetime");

                entity.Property(e => e.CreatedTerminal)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.FormId)
                    .IsRequired()
                    .HasColumnName("FormID")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.ModifiedOn).HasColumnType("datetime");

                entity.Property(e => e.ModifiedTerminal).HasMaxLength(50);

                entity.Property(e => e.ToTime).HasColumnName("ToTIme");
            });

            modelBuilder.Entity<GtGppkms>(entity =>
            {
                entity.HasKey(e => e.PackageId);

                entity.ToTable("GT_GPPKMS");

                entity.Property(e => e.PackageId).ValueGeneratedNever();

                entity.Property(e => e.CheckInWeekDays)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedOn).HasColumnType("datetime");

                entity.Property(e => e.CreatedTerminal)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.FormId)
                    .IsRequired()
                    .HasColumnName("FormID")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.ModifiedOn).HasColumnType("datetime");

                entity.Property(e => e.ModifiedTerminal).HasMaxLength(50);

                entity.Property(e => e.PackageDesc)
                    .IsRequired()
                    .HasMaxLength(150);
            });

            modelBuilder.Entity<GtGppkpr>(entity =>
            {
                entity.HasKey(e => new { e.PackageId, e.RoomTypeId, e.OccupancyType });

                entity.ToTable("GT_GPPKPR");

                entity.Property(e => e.OccupancyType)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedOn).HasColumnType("datetime");

                entity.Property(e => e.CreatedTerminal)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.FormId)
                    .IsRequired()
                    .HasColumnName("FormID")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.ModifiedOn).HasColumnType("datetime");

                entity.Property(e => e.ModifiedTerminal).HasMaxLength(50);

                entity.Property(e => e.Price).HasColumnType("decimal(18, 6)");
            });

            modelBuilder.Entity<GtGprmbm>(entity =>
            {
                entity.HasKey(e => new { e.RoomTypeId, e.RoomNumber, e.BedNumber });

                entity.ToTable("GT_GPRMBM");

                entity.Property(e => e.RoomNumber).HasMaxLength(15);

                entity.Property(e => e.BedNumber).HasMaxLength(15);

                entity.Property(e => e.CreatedOn).HasColumnType("datetime");

                entity.Property(e => e.CreatedTerminal)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.FormId)
                    .IsRequired()
                    .HasColumnName("FormID")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Gender)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.ModifiedOn).HasColumnType("datetime");

                entity.Property(e => e.ModifiedTerminal).HasMaxLength(50);
            });

            modelBuilder.Entity<GtGprmop>(entity =>
            {
                entity.HasKey(e => new { e.RoomTypeId, e.OptionType, e.SerialNumber });

                entity.ToTable("GT_GPRMOP");

                entity.Property(e => e.OptionType)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedOn).HasColumnType("datetime");

                entity.Property(e => e.CreatedTerminal)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.FormId)
                    .IsRequired()
                    .HasColumnName("FormID")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.ModifiedOn).HasColumnType("datetime");

                entity.Property(e => e.ModifiedTerminal).HasMaxLength(50);

                entity.Property(e => e.OptionDesc).HasMaxLength(500);

                entity.Property(e => e.OptionValues)
                    .IsRequired()
                    .HasMaxLength(500);
            });

            modelBuilder.Entity<GtGprmty>(entity =>
            {
                entity.HasKey(e => e.RoomTypeId);

                entity.ToTable("GT_GPRMTY");

                entity.Property(e => e.RoomTypeId).ValueGeneratedNever();

                entity.Property(e => e.BedType)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedOn).HasColumnType("datetime");

                entity.Property(e => e.CreatedTerminal)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.FormId)
                    .IsRequired()
                    .HasColumnName("FormID")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.ModifiedOn).HasColumnType("datetime");

                entity.Property(e => e.ModifiedTerminal).HasMaxLength(50);

                entity.Property(e => e.RoomTypeDesc)
                    .IsRequired()
                    .HasMaxLength(150);

                entity.Property(e => e.SqFeet).HasMaxLength(15);
            });

            modelBuilder.Entity<GtGptbkd>(entity =>
            {
                entity.HasKey(e => new { e.BusinessKey, e.BookingKey, e.GuestId, e.SerialNo });

                entity.ToTable("GT_GPTBKD");

                entity.Property(e => e.BookingKey).HasColumnType("numeric(25, 0)");

                entity.Property(e => e.CreatedOn).HasColumnType("datetime");

                entity.Property(e => e.CreatedTerminal)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.DocumentName)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.DocumentUrl)
                    .IsRequired()
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.FormId)
                    .IsRequired()
                    .HasColumnName("FormID")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.ModifiedOn).HasColumnType("datetime");

                entity.Property(e => e.ModifiedTerminal).HasMaxLength(50);
            });

            modelBuilder.Entity<GtGptbkg>(entity =>
            {
                entity.HasKey(e => new { e.BusinessKey, e.BookingKey, e.GuestId });

                entity.ToTable("GT_GPTBKG");

                entity.Property(e => e.BookingKey).HasColumnType("numeric(25, 0)");

                entity.Property(e => e.ActualCheckedInDate).HasColumnType("datetime");

                entity.Property(e => e.ActualCheckedOutDate).HasColumnType("datetime");

                entity.Property(e => e.AgeYy).HasColumnName("AgeYY");

                entity.Property(e => e.CreatedOn).HasColumnType("datetime");

                entity.Property(e => e.CreatedTerminal)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.EmailId)
                    .HasColumnName("EmailID")
                    .HasMaxLength(50);

                entity.Property(e => e.FirstName)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.FormId)
                    .IsRequired()
                    .HasColumnName("FormID")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Gender)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Isdcode).HasColumnName("ISDCode");

                entity.Property(e => e.LastName)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.MiddleName).HasMaxLength(50);

                entity.Property(e => e.MobileNumber)
                    .IsRequired()
                    .HasMaxLength(25);

                entity.Property(e => e.ModifiedOn).HasColumnType("datetime");

                entity.Property(e => e.ModifiedTerminal).HasMaxLength(50);

                entity.Property(e => e.Uhid).HasColumnName("UHID");
            });

            modelBuilder.Entity<GtGptbkh>(entity =>
            {
                entity.HasKey(e => new { e.BusinessKey, e.FinancialYear, e.DocumentId, e.DocumentNumber });

                entity.ToTable("GT_GPTBKH");

                entity.HasIndex(e => new { e.BusinessKey, e.BookingKey })
                    .HasName("IX_GT_GPTBKH");

                entity.Property(e => e.DocumentId).HasColumnName("DocumentID");

                entity.Property(e => e.BookingDate).HasColumnType("datetime");

                entity.Property(e => e.BookingKey).HasColumnType("numeric(25, 0)");

                entity.Property(e => e.BookingStatus)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.CheckInDate).HasColumnType("datetime");

                entity.Property(e => e.CheckOutDate).HasColumnType("datetime");

                entity.Property(e => e.CreatedOn).HasColumnType("datetime");

                entity.Property(e => e.CreatedTerminal)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.FormId)
                    .IsRequired()
                    .HasColumnName("FormID")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.ModifiedOn).HasColumnType("datetime");

                entity.Property(e => e.ModifiedTerminal).HasMaxLength(50);

                entity.Property(e => e.NetPackageAmount).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.PaymentMethod)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('C')");

                entity.Property(e => e.ReasonforCancellation).HasMaxLength(100);

                entity.Property(e => e.TotalDiscountAmount).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.TotalPackageAmount).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.TotalTaxAmount).HasColumnType("numeric(18, 6)");
            });

            modelBuilder.Entity<GtGptbkp>(entity =>
            {
                entity.HasKey(e => new { e.BusinessKey, e.BookingKey, e.GuestId });

                entity.ToTable("GT_GPTBKP");

                entity.Property(e => e.BookingKey).HasColumnType("numeric(25, 0)");

                entity.Property(e => e.BedNumber)
                    .IsRequired()
                    .HasMaxLength(15);

                entity.Property(e => e.CreatedOn).HasColumnType("datetime");

                entity.Property(e => e.CreatedTerminal)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.FormId)
                    .IsRequired()
                    .HasColumnName("FormID")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.ModifiedOn).HasColumnType("datetime");

                entity.Property(e => e.ModifiedTerminal).HasMaxLength(50);

                entity.Property(e => e.OccupancyType)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.PackagePrice).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.RoomNumber)
                    .IsRequired()
                    .HasMaxLength(15);

                entity.Property(e => e.TaxAmount).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.TaxPercentage).HasColumnType("numeric(18, 6)");
            });
        }
    }
}
