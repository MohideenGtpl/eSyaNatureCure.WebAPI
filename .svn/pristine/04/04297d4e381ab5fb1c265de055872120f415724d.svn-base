using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace eSyaNatureCure.DL.Entities
{
    public partial class eSyaEnterprise : DbContext
    {
        public static string _connString = "";
        public eSyaEnterprise()
        {
        }

        public eSyaEnterprise(DbContextOptions<eSyaEnterprise> options)
            : base(options)
        {
        }

        public virtual DbSet<GtGpacms> GtGpacms { get; set; }
        public virtual DbSet<GtGppkcv> GtGppkcv { get; set; }
        public virtual DbSet<GtGppkms> GtGppkms { get; set; }
        public virtual DbSet<GtGppkpr> GtGppkpr { get; set; }
        public virtual DbSet<GtGprmbm> GtGprmbm { get; set; }
        public virtual DbSet<GtGprmop> GtGprmop { get; set; }
        public virtual DbSet<GtGprmty> GtGprmty { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. See http://go.microsoft.com/fwlink/?LinkId=723263 for guidance on storing connection strings.
                optionsBuilder.UseSqlServer("Server=103.227.97.123,1433;Database=eSyaGuestManagement;user id=esya;password=Gt@pl#20;");
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("ProductVersion", "2.2.6-servicing-10079");

            modelBuilder.Entity<GtGpacms>(entity =>
            {
                entity.HasKey(e => e.ActivityId);

                entity.ToTable("GT_GPACMS");

                entity.Property(e => e.ActivityId).ValueGeneratedNever();

                entity.Property(e => e.ActivityDesc)
                    .IsRequired()
                    .HasMaxLength(150);

                entity.Property(e => e.CreatedOn).HasColumnType("datetime");

                entity.Property(e => e.CreatedTerminal)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.FormId)
                    .IsRequired()
                    .HasColumnName("FormID")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.ModifiedOn).HasColumnType("datetime");

                entity.Property(e => e.ModifiedTerminal).HasMaxLength(50);

                entity.Property(e => e.ScheduleType)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<GtGppkcv>(entity =>
            {
                entity.HasKey(e => new { e.PackageId, e.DayId, e.ActivityId });

                entity.ToTable("GT_GPPKCV");

                entity.Property(e => e.CreatedOn).HasColumnType("datetime");

                entity.Property(e => e.CreatedTerminal)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.FormId)
                    .IsRequired()
                    .HasColumnName("FormID")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.ModifiedOn).HasColumnType("datetime");

                entity.Property(e => e.ModifiedTerminal).HasMaxLength(50);

                entity.Property(e => e.ToTime).HasColumnName("ToTIme");
            });

            modelBuilder.Entity<GtGppkms>(entity =>
            {
                entity.HasKey(e => e.PackageId);

                entity.ToTable("GT_GPPKMS");

                entity.Property(e => e.PackageId).ValueGeneratedNever();

                entity.Property(e => e.CheckInWeekDays)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedOn).HasColumnType("datetime");

                entity.Property(e => e.CreatedTerminal)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.FormId)
                    .IsRequired()
                    .HasColumnName("FormID")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.ModifiedOn).HasColumnType("datetime");

                entity.Property(e => e.ModifiedTerminal).HasMaxLength(50);

                entity.Property(e => e.PackageDesc)
                    .IsRequired()
                    .HasMaxLength(150);
            });

            modelBuilder.Entity<GtGppkpr>(entity =>
            {
                entity.HasKey(e => new { e.PackageId, e.RoomTypeId, e.OccupancyType });

                entity.ToTable("GT_GPPKPR");

                entity.Property(e => e.OccupancyType)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedOn).HasColumnType("datetime");

                entity.Property(e => e.CreatedTerminal)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.FormId)
                    .IsRequired()
                    .HasColumnName("FormID")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.ModifiedOn).HasColumnType("datetime");

                entity.Property(e => e.ModifiedTerminal).HasMaxLength(50);

                entity.Property(e => e.Price).HasColumnType("decimal(18, 6)");
            });

            modelBuilder.Entity<GtGprmbm>(entity =>
            {
                entity.HasKey(e => new { e.RoomTypeId, e.RoomNumber, e.BedNumber });

                entity.ToTable("GT_GPRMBM");

                entity.Property(e => e.RoomNumber).HasMaxLength(15);

                entity.Property(e => e.BedNumber).HasMaxLength(15);

                entity.Property(e => e.CreatedOn).HasColumnType("datetime");

                entity.Property(e => e.CreatedTerminal)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.FormId)
                    .IsRequired()
                    .HasColumnName("FormID")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Gender)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.ModifiedOn).HasColumnType("datetime");

                entity.Property(e => e.ModifiedTerminal).HasMaxLength(50);
            });

            modelBuilder.Entity<GtGprmop>(entity =>
            {
                entity.HasKey(e => new { e.RoomTypeId, e.OptionType, e.SerialNumber });

                entity.ToTable("GT_GPRMOP");

                entity.Property(e => e.OptionType)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedOn).HasColumnType("datetime");

                entity.Property(e => e.CreatedTerminal)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.FormId)
                    .IsRequired()
                    .HasColumnName("FormID")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.ModifiedOn).HasColumnType("datetime");

                entity.Property(e => e.ModifiedTerminal).HasMaxLength(50);

                entity.Property(e => e.OptionDesc).HasMaxLength(500);

                entity.Property(e => e.OptionValues)
                    .IsRequired()
                    .HasMaxLength(500);
            });

            modelBuilder.Entity<GtGprmty>(entity =>
            {
                entity.HasKey(e => e.RoomTypeId);

                entity.ToTable("GT_GPRMTY");

                entity.Property(e => e.RoomTypeId).ValueGeneratedNever();

                entity.Property(e => e.BedType)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedOn).HasColumnType("datetime");

                entity.Property(e => e.CreatedTerminal)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.FormId)
                    .IsRequired()
                    .HasColumnName("FormID")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.ModifiedOn).HasColumnType("datetime");

                entity.Property(e => e.ModifiedTerminal).HasMaxLength(50);

                entity.Property(e => e.RoomTypeDesc)
                    .IsRequired()
                    .HasMaxLength(150);

                entity.Property(e => e.SqFeet).HasMaxLength(15);
            });
        }
    }
}
